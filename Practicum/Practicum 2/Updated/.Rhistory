returnstring_year_m<-str_split(trystring_year_m," ")
#print(returnstring_year[[1]][[1]])
if(returnstring_year_m[[1]][[1]]=="2012" | returnstring_year_m[[1]][[1]]=="2013")
{
month<-returnstring_year_m[[1]][[2]]
month<-str_split(month,"-")
final_month<-month[[1]][[1]]
#print(final_month)
#print(m)
}
if(m==12)
{
final_month <- "Jun"
#print(final_month)
#print(m)
}
else if(m!=2 & m!=4 & m!=12 & m!=13 & m!=18)
{
final_month <- returnstring_year_m[[1]][[1]]
}
##Loading the dataframe
journal.df[m,1] <- m_article_id # foreign key
journal.df[m,2] <- j_issn_no     #primary key
journal.df[m,3] <- j_issn_no_type
journal.df[m,4] <- j_issn_issue
journal.df[m,5] <- j_issn_volume
journal.df[m,6] <- j_issn_no_issue
journal.df[m,7] <- j_issn_no_title
#journal.df[m,8] <- j_issn_no_ISOAbbreviation
journal.df[m,8] <- j_final_year
journal.df[m,9] <- final_month
}
row.names(journal.df) <- NULL
print(journal.df)
noPO=19
for(m in 1:noPO){
node<- root[[m]]
pubmed_article <- node[[1]]
#getting title
xpathjournal6 <-"//MedlineCitation/Article/Journal/Title"
issn_no_title<- xpathSApply(pubmed_article,xpathjournal6,xmlValue)
j_issn_no_title<- issn_no_title[[m]]
#getting ISOAbbreviation
xpathjournal7 <-"//MedlineCitation/Article/Journal/ISOAbbreviation"
issn_no_iso<- xpathSApply(pubmed_article,xpathjournal7,xmlValue)
j_issn_no_ISOAbbreviation<- issn_no_iso[[m]]
journal_name.df[m,1] <- j_issn_no_title
journal_name.df[m,2] <- j_issn_no_ISOAbbreviation
}
journal_name.df<-journal_name.df[!duplicated(journal_name.df$Journal_name), ]
row.names(journal_name.df) <- NULL
print(journal_name.df)
issn_type_name.df[1,1] <- as.integer(1)
issn_type_name.df[1,2] <- "Print"
issn_type_name.df[1,3] <- "Print"
issn_type_name.df[2,1] <- as.integer(2)
issn_type_name.df[2,2] <- "Electronic"
issn_type_name.df[2,3] <- "Internet"
row.names(issn_type_name.df) <- NULL
print(issn_type_name.df)
noPO<-19
sum<-1
for(m in 1:noPO)
{
node <- root[[m]]
pubmeddata_node<-node[[2]]
vals<-pubmeddata_node[[1]]
xpathjournal1 <-"count(./PubMedPubDate)"
year<- xpathSApply(vals,xpathjournal1,xmlValue)
publication_status <- "./PubMedPubDate"
publication_status_final <- xpathSApply(vals,publication_status,xmlAttrs)
publication_year_history <- "./PubMedPubDate/Year"
publication_year_history_final <- xpathSApply(vals,publication_year_history,xmlValue)
publication_month_history <- "./PubMedPubDate/Month"
publication_month_history_final <- xpathSApply(vals,publication_month_history,xmlValue)
publication_day_history <- "./PubMedPubDate/Day"
publication_day_history_final <- xpathSApply(vals,publication_day_history,xmlValue)
for (i in 1:year)
{
h_status_final<- publication_status_final[[i]][[1]]
if(h_status_final=="received")
{
h_status_final <- as.integer(1)
}
if(h_status_final=="accepted")
{
h_status_final <- as.integer(2)
}
if(h_status_final=="epublish")
{
h_status_final <- as.integer(3)
}
if(h_status_final=="entrez")
{
h_status_final <- as.integer(4)
}
if(h_status_final=="pubmed")
{
h_status_final <- as.integer(5)
}
if(h_status_final=="medline")
{
h_status_final <- as.integer(6)
}
if(h_status_final=="revised")
{
h_status_final <- as.integer(7)
}
if(h_status_final=="aheadofprint")
{
h_status_final <- as.integer(8)
}
h_year_final<-publication_year_history_final[[i]][[1]]
h_month_final<-publication_month_history_final[[i]][[1]]
h_day_final<-publication_day_history_final[[i]][[1]]
history.df[sum,1] <- as.integer(m)
history.df[sum,2] <- as.integer(sum)
history.df[sum,3] <- h_status_final
history.df[sum,4] <- h_year_final
history.df[sum,5] <- h_month_final
history.df[sum,6] <- h_day_final
sum<-sum+1
}
}
row.names(history.df) <- NULL
print(history.df)
pubstatus_name.df[1,1]<-as.integer(1)
pubstatus_name.df[1,2]<-"received"
pubstatus_name.df[2,1]<-as.integer(2)
pubstatus_name.df[2,2]<-"accepted"
pubstatus_name.df[3,1]<-as.integer(3)
pubstatus_name.df[3,2]<-"epublish"
pubstatus_name.df[4,1]<-as.integer(4)
pubstatus_name.df[4,2]<-"entrez"
pubstatus_name.df[5,1]<-as.integer(5)
pubstatus_name.df[5,2]<-"pubmed"
pubstatus_name.df[6,1]<-as.integer(6)
pubstatus_name.df[6,2]<-"medline"
pubstatus_name.df[7,1]<-as.integer(7)
pubstatus_name.df[7,2]<-"revised"
pubstatus_name.df[8,1]<-as.integer(8)
pubstatus_name.df[8,2]<-"aheadofprint"
row.names(pubstatus_name.df) <- NULL
print(pubstatus_name.df)
summ=1;
for(m in 1:19)
{
node <- root[[m]]
pubmeddata_node<-node[[1]]
vals<-"count(./Article/AuthorList/Author)"
no_of_children_authors<- xpathSApply(pubmeddata_node,vals,xmlChildren)
lastname<-"./Article/AuthorList/Author/LastName"
lastname_author<- xpathSApply(pubmeddata_node,lastname,xmlValue)
forename<-"./Article/AuthorList/Author/ForeName"
forename_author<- xpathSApply(pubmeddata_node,forename,xmlValue)
initials<-"./Article/AuthorList/Author/Initials"
initials_author<- xpathSApply(pubmeddata_node,initials,xmlValue)
for(i in 1:no_of_children_authors)
{
author.df[summ,1]<-as.integer(m)
author.df[summ,2]<-as.integer(summ)
author.df[summ,3]<-lastname_author[[i]]
author.df[summ,4]<-forename_author[[i]]
#author.df[summ,5]<-initials_author[[i]]
summ<-summ+1
}
}
#author.df<-author.df[!duplicated(author.df$first_name)&!duplicated(author.df$last_name), ]
#author.df<-author.df[!duplicated(author.df[,c('last_name','first_name')]),]
author.df$full_name <- paste(author.df$first_name, author.df$last_name)
row.names(author.df) <- NULL
print(author.df)
summ=1;
for(m in 1:19)
{
node <- root[[m]]
pubmeddata_node<-node[[1]]
vals<-"count(./Article/AuthorList/Author)"
no_of_children_authors<- xpathSApply(pubmeddata_node,vals,xmlChildren)
forename<-"./Article/AuthorList/Author/ForeName"
forename_author<- xpathSApply(pubmeddata_node,forename,xmlValue)
initials<-"./Article/AuthorList/Author/Initials"
initials_author<- xpathSApply(pubmeddata_node,initials,xmlValue)
for(i in 1:no_of_children_authors)
{
author_initials.df[summ,1]<-forename_author[[i]]
author_initials.df[summ,2]<-initials_author[[i]]
summ<-summ+1
}
}
author_initials.df<-author_initials.df[!duplicated(author_initials.df[,c('first_name')]),]
row.names(author_initials.df) <- NULL
print(author_initials.df)
medline_citation.df[1,1]<-as.integer(1)
medline_citation.df[1,2]<-"PubMed-not-MEDLINE"
medline_citation.df[2,1]<-as.integer(2)
medline_citation.df[2,2]<-"MEDLINE"
row.names(medline_citation.df) <- NULL
print(medline_citation.df)
article_pubmodel.df[1,1]<-as.integer(1)
article_pubmodel.df[1,2]<-"Print-Electronic"
article_pubmodel.df[2,1]<-as.integer(2)
article_pubmodel.df[2,2]<-"Print"
row.names(article_pubmodel.df) <- NULL
print(article_pubmodel.df)
dbWriteTable(dbcon, name="pubmed_article", value=pubmed_article.df, append=TRUE)
dbWriteTable(dbcon, name="medline_citation", value=medline_citation.df, append=TRUE)
dbWriteTable(dbcon, name="article_pubmodel", value=article_pubmodel.df, append=TRUE)
dbWriteTable(dbcon, name="journal", value=journal.df, append=TRUE)
dbWriteTable(dbcon, name="journal_name", value=journal_name.df, append=TRUE)
dbWriteTable(dbcon, name="issn_type_name", value=issn_type_name.df, append=TRUE)
dbWriteTable(dbcon, name="author", value=author.df, append=TRUE)
dbWriteTable(dbcon, name="author_initials", value=author_initials.df, append=TRUE)
dbWriteTable(dbcon, name="history", value=history.df, append=TRUE)
pubmed_article_star.df <- data.frame (article_id = integer(),
medlinecitation_statusid = character(),
owner = character(),
pmid_version = character(),
pmid = integer(),
dates_created = character(),
dates_completed = character(),
dates_revised = character(),
article_pubmodel = character(),
article_title = character(),
if_author_list_complete= character(),
language = character(),
if_grant_list_completed = character(),
stringsAsFactors = FALSE)
journal_star.df <- data.frame (article_id = integer(),
issn = character(),
issn_type_name = character(),
journal_issue_cited_medium = character(),
volume = character(),
issue = character(),
Journal_title = character(),
iso_abbreviation = character(),
publication_year=character(),
publication_month=character(),
stringsAsFactors = FALSE)
author_star.df <- data.frame (article_id = integer(),
author_id = integer(),
last_name = character(),
first_name = character(),
initials = character(),
stringsAsFactors = FALSE
)
# grant.df <- data.frame (article_id = integer(),
#                           grant_id = character(),
#                           acronym = character(),
#                           agency = character(),
#                           country = character()
#                           )
history_star.df <- data.frame (article_id = integer(),
pubstatus_id = integer(),
pubstatus_name = character(),
year=integer(),
month = integer(),
day = integer(),
stringsAsFactors = FALSE)
numPO=19
#7 17 --- has dates problem
for (m in 1:numPO){
#print(m)
node <- root[[m]]
# Getting data from pubmed_article
pubmed_article <- node[[1]]
#Getting Medline Status
medlinecitation_status <- xmlAttrs(pubmed_article)
m_medlinecitation_status<- medlinecitation_status[[2]]
#getting article pubmodel
xpathEx00 <-"//MedlineCitation/Article"
m_articlepubmodeltitle <- xpathSApply(pubmed_article,xpathEx00,xmlAttrs)
m_pubmodel_name<- m_articlepubmodeltitle[[m]]
#Getting pmid and it's version
m_pmid <- xmlValue(pubmed_article[[1]][[1]])
b0 <- xmlAttrs(pubmed_article[[1]])
m_pmid_version<-b0[[1]]
# Getting date created
date_created_year <- xmlValue(pubmed_article[[2]][[1]][[1]])
date_created_month <- xmlValue(pubmed_article[[2]][[2]][[1]])
date_created_day <- xmlValue(pubmed_article[[2]][[3]][[1]])
m_date_created <- paste(date_created_year, date_created_month, date_created_day, sep="-") %>% ymd() %>% as.Date()
strDates1 <- as.character(m_date_created)
#Getting Date Completed
date_completed_year <- xmlValue(pubmed_article[[3]][[1]][[1]])
date_completed_month <- xmlValue(pubmed_article[[3]][[2]][[1]])
date_completed_day <- xmlValue(pubmed_article[[3]][[3]][[1]])
m_date_completed <- paste(date_completed_year, date_completed_month, date_completed_day, sep="-") %>% ymd() %>% as.Date()
strDates2 <- as.character(m_date_completed)
#Getting Date Revised
date_revised_year <- xmlValue(pubmed_article[[4]][[1]][[1]])
date_revised_month <- xmlValue(pubmed_article[[4]][[2]][[1]])
date_revised_day <- xmlValue(pubmed_article[[4]][[3]][[1]])
m_date_revised <- paste(date_revised_year, date_revised_month, date_revised_day, sep="-") %>% ymd() %>% as.Date()
strDates3 <- as.character(m_date_revised)
#Getting article_title
xpathEx0 <-"//MedlineCitation/Article/ArticleTitle"
m_articletitle <- xpathSApply(pubmed_article,xpathEx0,xmlValue)
m_article_title<- m_articletitle[[m]]
#Getting AuthorListComplete
xpathEx1 <-"//MedlineCitation/Article/AuthorList"
x1<-xpathSApply(pubmed_article,xpathEx1,xmlAttrs)
m_authorlist_ifcomplete <- x1[[1]]
#getting language
xpathEx2 <-"//MedlineCitation/Article/Language"
x2 <- xpathSApply(pubmed_article,xpathEx2,xmlValue)
m_language <- x2[[1]]
#Checking if grant is completed
xpathEx3 <-"//MedlineCitation/Article/GrantList"
x3<-xpathSApply(pubmed_article,xpathEx3,xmlAttrs)
m_grantlist_ifcomplete <- x3[[1]]
## Article Date Completed
#assigning randomm values
m_article_id = as.integer(m)
m_owner <- "NLM"
#Getting the Pubmodel_article dataframe
pubmed_article_star.df[m,1] <- m_article_id   #primary key
pubmed_article_star.df[m,2] <- m_medlinecitation_status
pubmed_article_star.df[m,3] <- m_owner
pubmed_article_star.df[m,4] <- m_pmid_version
pubmed_article_star.df[m,5] <- m_pmid
pubmed_article_star.df[m,6] <- strDates1
pubmed_article_star.df[m,7] <- strDates2
pubmed_article_star.df[m,8] <- strDates3
pubmed_article_star.df[m,9] <- m_pubmodel_name
pubmed_article_star.df[m,10] <-m_article_title
pubmed_article_star.df[m,11] <-m_authorlist_ifcomplete
pubmed_article_star.df[m,12] <-m_language
pubmed_article_star.df[m,13] <-m_grantlist_ifcomplete
}
print(pubmed_article_star.df)
noPO=19
for(m in 1:noPO){
node<- root[[m]]
pubmed_article <- node[[1]]
#getting ISSN nO
xpathjournal1 <-"//MedlineCitation/Article/Journal/ISSN"
issn_no<- xpathSApply(pubmed_article,xpathjournal1,xmlValue)
j_issn_no<- issn_no[[m]]
#print(m)
#print(j_issn_no)
#getting ISSN TYPE
xpathjournal2 <-"//MedlineCitation/Article/Journal/ISSN"
issn_no_type<- xpathSApply(pubmed_article,xpathjournal2,xmlAttrs)
j_issn_no_type<- issn_no_type[[m]]
#Getting issue medium
xpathjournal3 <-"//MedlineCitation/Article/Journal/JournalIssue"
issn_no_issue<- xpathSApply(pubmed_article,xpathjournal3,xmlAttrs)
j_issn_issue<- issn_no_issue[[m]]
#getting volume of Journal
xpathjournal4 <-"//MedlineCitation/Article/Journal/JournalIssue/Volume"
issn_volume_type<- xpathSApply(pubmed_article,xpathjournal4,xmlValue)
j_issn_volume<- issn_volume_type[[m]]
#Getting issue of Journal
xpathjournal5 <-"//MedlineCitation/Article/Journal/JournalIssue/Issue"
issn_no_issues<- xpathSApply(pubmed_article,xpathjournal5,xmlValue)
j_issn_no_issue<- issn_no_issues[[m]]
#getting title
xpathjournal6 <-"//MedlineCitation/Article/Journal/Title"
issn_no_title<- xpathSApply(pubmed_article,xpathjournal6,xmlValue)
j_issn_no_title<- issn_no_title[[m]]
#getting ISOAbbreviation
xpathjournal7 <-"//MedlineCitation/Article/Journal/ISOAbbreviation"
issn_no_iso<- xpathSApply(pubmed_article,xpathjournal7,xmlValue)
j_issn_no_ISOAbbreviation<- issn_no_iso[[m]]
m_article_id = as.integer(m)
#Getting pub year of the Journal
xpathEx_year <-"//MedlineCitation/Article/Journal/JournalIssue/PubDate/MedlineDate|//MedlineCitation/Article/Journal/JournalIssue/PubDate/Year"
m_year <- xpathSApply(pubmed_article,xpathEx_year,xmlValue)
trystring_year<-m_year[[m]]
returnstring_year<-str_split(trystring_year," ")
j_final_year<-returnstring_year[[1]][[1]]
#Getting pub month of the Journal
xpathEx_month <-"//MedlineCitation/Article/Journal/JournalIssue/PubDate/MedlineDate|//MedlineCitation/Article/Journal/JournalIssue/PubDate/Month"
m_year_m <- xpathSApply(pubmed_article,xpathEx_month,xmlValue)
i=19
while(i>=12)
{
m_year_m[[i]]<-m_year_m[[i-1]]
i <- i-1
}
m_year_m[[12]]<-"Jun"
#print(typeof(m_year))
trystring_year_m<-m_year_m[[m]]
returnstring_year_m<-str_split(trystring_year_m," ")
#print(returnstring_year[[1]][[1]])
if(returnstring_year_m[[1]][[1]]=="2012" | returnstring_year_m[[1]][[1]]=="2013")
{
month<-returnstring_year_m[[1]][[2]]
month<-str_split(month,"-")
final_month<-month[[1]][[1]]
#print(final_month)
#print(m)
}
if(m==12)
{
final_month <- "Jun"
#print(final_month)
#print(m)
}
else if(m!=2 & m!=4 & m!=12 & m!=13 & m!=18)
{
final_month <- returnstring_year_m[[1]][[1]]
#print(final_month)
#print(m)
}
##Loading the dataframe
journal_star.df[m,1] <- m_article_id # foreign key
journal_star.df[m,2] <- j_issn_no     #primary key
journal_star.df[m,3] <- j_issn_no_type
journal_star.df[m,4] <- j_issn_issue
journal_star.df[m,5] <- j_issn_volume
journal_star.df[m,6] <- j_issn_no_issue
journal_star.df[m,7] <- j_issn_no_title
journal_star.df[m,8] <- j_issn_no_ISOAbbreviation
journal_star.df[m,9] <- j_final_year
journal_star.df[m,10] <- final_month
}
print(journal_star.df)
noPO<-19
sum<-1
for(m in 1:noPO)
{
node <- root[[m]]
pubmeddata_node<-node[[2]]
vals<-pubmeddata_node[[1]]
xpathjournal1 <-"count(./PubMedPubDate)"
year<- xpathSApply(vals,xpathjournal1,xmlValue)
publication_status <- "./PubMedPubDate"
publication_status_final <- xpathSApply(vals,publication_status,xmlAttrs)
publication_year_history <- "./PubMedPubDate/Year"
publication_year_history_final <- xpathSApply(vals,publication_year_history,xmlValue)
publication_month_history <- "./PubMedPubDate/Month"
publication_month_history_final <- xpathSApply(vals,publication_month_history,xmlValue)
publication_day_history <- "./PubMedPubDate/Day"
publication_day_history_final <- xpathSApply(vals,publication_day_history,xmlValue)
for (i in 1:year)
{
h_status_final<- publication_status_final[[i]][[1]]
h_year_final<-publication_year_history_final[[i]][[1]]
h_month_final<-publication_month_history_final[[i]][[1]]
h_day_final<-publication_day_history_final[[i]][[1]]
history_star.df[sum,1] <- as.integer(m)
history_star.df[sum,2] <- as.integer(sum)
history_star.df[sum,3] <- h_status_final
history_star.df[sum,4] <- h_year_final
history_star.df[sum,5] <- h_month_final
history_star.df[sum,6] <- h_day_final
sum<-sum+1
}
}
print(history_star.df)
summ=1;
for(m in 1:19)
{
node <- root[[m]]
pubmeddata_node<-node[[1]]
vals<-"count(./Article/AuthorList/Author)"
no_of_children_authors<- xpathSApply(pubmeddata_node,vals,xmlChildren)
lastname<-"./Article/AuthorList/Author/LastName"
lastname_author<- xpathSApply(pubmeddata_node,lastname,xmlValue)
forename<-"./Article/AuthorList/Author/ForeName"
forename_author<- xpathSApply(pubmeddata_node,forename,xmlValue)
initials<-"./Article/AuthorList/Author/Initials"
initials_author<- xpathSApply(pubmeddata_node,initials,xmlValue)
for(i in 1:no_of_children_authors)
{
author_star.df[summ,1]<-as.integer(m)
author_star.df[summ,2]<-as.integer(summ)
author_star.df[summ,3]<-lastname_author[[i]]
author_star.df[summ,4]<-forename_author[[i]]
author_star.df[summ,5]<-initials_author[[i]]
summ<-summ+1
}
}
#author.df<-author.df[!duplicated(author.df$first_name)&!duplicated(author.df$first_name), ]
print(author_star.df)
fpath = "D://Northeastern\ University//CS5200\ DBMS//Practicum/Practicum\ 2/"
#fpath <- "C://Users/spati/OneDrive/Documents/practicum 2/"
dbfile = "practicum_2.db"
# if database file already exists, we connect to it, otherwise
# we create a new database
dbcon <- dbConnect(RSQLite::SQLite(), paste0(fpath,dbfile))
dbWriteTable(dbcon, name="author_star", value=author_star.df, append=TRUE)
dbWriteTable(dbcon, name="journal_star", value=journal_star.df, append=TRUE)
dbWriteTable(dbcon, name="history_star", value=history_star.df, append=TRUE)
dbWriteTable(dbcon, name="pubmed_article_star", value=pubmed_article_star.df, append=TRUE)
#knitr::include_graphics("C://Users/spati/OneDrive/Documents/practicum 2/part2_a.png")
knitr::include_graphics("D://Northeastern\ University//CS5200\ DBMS//Practicum/Practicum\ 2/part2a.jpeg")
#knitr::include_graphics("C://Users/spati/OneDrive/Documents/practicum 2/part2b_author.png")
knitr::include_graphics("D://Northeastern\ University//CS5200\ DBMS//Practicum/Practicum\ 2/part2b_author.jpeg")
#knitr::include_graphics("C://Users/spati/OneDrive/Documents/practicum 2/part2b_journal.png")
knitr::include_graphics("D://Northeastern\ University//CS5200\ DBMS//Practicum/Practicum\ 2/part2b_journal.jpeg")
transaction_distribution_month <- dbGetQuery(dbcon, "select publication_month, count(pmid) as count from transaction_fact_table group by publication_month;")
head(transaction_distribution_month)
ggplot(data = transaction_distribution_month, mapping=aes(x=publication_month, y=count, color=publication_month)) +
geom_bar(stat = "identity")
transaction_distribution_year <- dbGetQuery(dbcon, "select publication_year, count(pmid) as count from transaction_fact_table group by publication_year;")
head(transaction_distribution_year)
ggplot(data = transaction_distribution_year, mapping=aes(x=publication_year, y=count, color=publication_year)) +
geom_bar(stat = "identity")
transaction_distribution_pubmodelName <- dbGetQuery(dbcon, "select article_pubmodel, count(pmid) as count from transaction_fact_table  group by article_pubmodel;")
head(transaction_distribution_pubmodelName)
ggplot(data = transaction_distribution_pubmodelName, mapping=aes(x=article_pubmodel, y=count))+
geom_bar(stat = "identity", fill=rgb(0.1,0.4,0.5,0.7))
transaction_distribution_pubmodelmonth <- dbGetQuery(dbcon, "select article_pubmodel, publication_month, count(pmid) as count from transaction_fact_table group by article_pubmodel, publication_month;")
ggplot(data = transaction_distribution_pubmodelName) +
geom_bar(mapping=aes(x=article_pubmodel, y=publication_month), stat = "identity", fill=rgb(0.1,0.4,0.5,0.7))
transaction_distribution_pubmodelmonth <- dbGetQuery(dbcon, "select article_pubmodel, publication_month, count(pmid) as count from transaction_fact_table group by article_pubmodel, publication_month;")
# Grouped
ggplot(data = transaction_distribution_pubmodelmonth, aes(fill=article_pubmodel, x=publication_month, y=count)) +
geom_bar(position="dodge", stat="identity")
